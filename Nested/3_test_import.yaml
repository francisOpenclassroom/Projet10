AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Instance Intranet

Parameters:

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  NetworkStackName:
    Description: >-
      Nom de la stack reseau
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: network

  DBStackName:
    Description: >-
      Nom de la stack BDD
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: DB

  BDDEndoint:
    Description: BDD Endpoint
    Type: AWS::SSM::Parameter::Value<String>
    Default: BDDEndpoint

  SGStackName:
    Description: >-
      Nom de la stack des groupes de securite
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: SG

# -------- INSTANCE EC2 INTRANET --------#
Resources:
  InstanceIntranet:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum -y update
          sudo amazon-linux-extras install docker
          sudo service docker start
          sudo systemctl enable docker
          sudo usermod -a -G docker ec2-user
          sudo docker run -tid --restart always -p 80:80 --name web gerbildock/intranet:V1.1
          echo "DB_NAME=${BDDEndoint}" >> /home/ec2-user/env


      InstanceType: t2.micro
      ImageId: ami-00798d7180f25aac2
      KeyName: !Ref KeyName
      SubnetId: !ImportValue
        'Fn::Sub': '${NetworkStackName}-PrivateSubnetC'
      PrivateIpAddress: 10.1.7.10
      SecurityGroupIds:
        - !ImportValue
          'Fn::Sub': '${SGStackName}-WS-SG'





# aws cloudformation deploy --template-file 5_intranet.yaml --stack-name intranet  --parameter-overrides KeyName=tp-terraform